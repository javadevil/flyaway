/*
 * The MIT License
 *
 * Copyright 2014 wt.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package com.flyaway.ui;

import com.flyaway.FlyAway;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author wt
 */
public class SwingFace extends javax.swing.JFrame {

    /**
     * Creates new form SwingFace
     */
    public SwingFace() {
        initComponents();
        //Output Redirect
        ByteArrayOutputStream out = new ByteArrayOutputStream(){

            @Override
            public void flush() throws IOException {
                super.flush();
                display.append(this.toString());
                this.reset();
            }
        };
        System.setOut(new PrintStream(out,true));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        headerMenu = new javax.swing.JMenuItem();
        infoMenu = new javax.swing.JMenuItem();
        configMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        fixCurrentMenu = new javax.swing.JMenuItem();
        mixMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fly Away");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        display.setEditable(false);
        display.setColumns(20);
        display.setRows(5);
        display.setTabSize(4);
        jScrollPane1.setViewportView(display);

        fileMenu.setText("File");

        headerMenu.setText("Header.iim");
        headerMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headerMenuActionPerformed(evt);
            }
        });
        fileMenu.add(headerMenu);

        infoMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, 0));
        infoMenu.setText("Info");
        infoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoMenuActionPerformed(evt);
            }
        });
        fileMenu.add(infoMenu);

        configMenu.setText("Config");
        configMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configMenuActionPerformed(evt);
            }
        });
        fileMenu.add(configMenu);

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, 0));
        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenu);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        fixCurrentMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        fixCurrentMenu.setText("#Current");
        fixCurrentMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixCurrentMenuActionPerformed(evt);
            }
        });
        editMenu.add(fixCurrentMenu);

        mixMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        mixMenu.setText("Mix");
        mixMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mixMenuActionPerformed(evt);
            }
        });
        editMenu.add(mixMenu);

        menuBar.add(editMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void infoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoMenuActionPerformed
        System.out.println(FlyAway.properties.toString().replace(",", "\n"));
    }//GEN-LAST:event_infoMenuActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed

    private void headerMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headerMenuActionPerformed
        try {
            // TODO add your handling code here:
            FlyAway.createHeader();
        }catch(Exception e){
            display.setText(e.getMessage());
        }
    }//GEN-LAST:event_headerMenuActionPerformed

    private void fixCurrentMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixCurrentMenuActionPerformed
        try {
            // TODO add your handling code here:
            System.out.println("test");
            display.setText(FlyAway.compile("test"));
        }catch(Exception e){
            display.setText(e.getMessage());
        }
    }//GEN-LAST:event_fixCurrentMenuActionPerformed

    private void mixMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mixMenuActionPerformed
        // TODO add your handling code here:
        Preferences prefs = Preferences.userNodeForPackage(FlyAway.class);
        JFileChooser fc = new JFileChooser(prefs.get("macPath",null));
        fc.setFileFilter(new FileNameExtensionFilter("IIM File", "iim"));
        fc.setMultiSelectionEnabled(true);
        fc.showOpenDialog(this);
        File[] files = fc.getSelectedFiles();
        try {
            display.setText(FlyAway.mix(files));
        } catch (Exception e) {
            display.setText(e.getMessage());
        }
    }//GEN-LAST:event_mixMenuActionPerformed

    private void configMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configMenuActionPerformed
        // TODO add your handling code here:
        Properties properties = FlyAway.properties;
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.showOpenDialog(this);
        File f = fc.getSelectedFile();
        if(f != null){
            properties.put("imPath", f.toString());
        } else {
            return;
        }
        String dbcUser = JOptionPane.showInputDialog(this, "Deadth by Capcha Username");
        properties.put("dbcUser", dbcUser);
        String dbcPass = JOptionPane.showInputDialog(this, "Deadth by Capcha Password");
        properties.put("dbcPass", dbcPass);
        try {
            properties.store(new FileOutputStream(new File("config.properties")), "OK");
        } catch (IOException ex) {
            System.out.println(ex);
            Logger.getLogger(SwingFace.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(properties.toString().replace(",", "\n"));
    }//GEN-LAST:event_configMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwingFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwingFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwingFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwingFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SwingFace swingface = new SwingFace();
                swingface.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem configMenu;
    private javax.swing.JTextArea display;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fixCurrentMenu;
    private javax.swing.JMenuItem headerMenu;
    private javax.swing.JMenuItem infoMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mixMenu;
    // End of variables declaration//GEN-END:variables
}
